{"version":3,"sources":["state/store.ts","state/middlewares/persist-middleware.ts","hooks/use-typed-selector.ts","components/code-editor.tsx","components/preview.tsx","components/resizable.tsx","hooks/use-actions.ts","components/code-cell.tsx","hooks/use-cumulative-code.ts","components/action-bar.tsx","components/cell-list-item.tsx","components/add-cell.tsx","components/logo.tsx","components/footer.tsx","components/cell-list.tsx","index.tsx","bundler/plugins/fetch-plugin.ts","bundler/index.ts","bundler/plugins/unpkg-path-plugin.ts","state/action-creators/index.ts","state/reducers/cellsReducer.ts","state/reducers/bundleReducer.ts","state/reducers/index.ts","state/index.ts","state/action-types/index.ts"],"names":["store","createStore","reducers","applyMiddleware","timer","dispatch","getState","next","action","ActionType","MOVE_CELL","UPDATE_CELL","INSERT_CELL_AFTER","DELETE_CELL","includes","type","clearTimeout","setTimeout","saveCells","thunk","useTypedSelector","useSelector","CodeEditor","onChange","initialValue","editorRef","useRef","className","onClick","unformatted","current","getModel","getValue","formatted","prettier","format","parser","plugins","useTabs","semi","replace","setValue","onMount","editor","monaco","updateOptions","tabSize","monacoJSXHighlighter","code","parse","sourceType","traverse","highLightOnDidChangeModelContent","undefined","value","theme","language","height","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","html","Preview","err","iframe","useEffect","srcdoc","contentWindow","postMessage","ref","title","sandbox","srcDoc","Resizable","resizableProps","direction","children","useState","window","innerHeight","setInnerHeight","innerWidth","setInnerWidth","width","setWidth","listener","addEventListener","removeEventListener","minConstraints","Infinity","maxConstraints","resizeHandles","onResizeStop","event","data","size","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","CodeCell","cellId","cell","updateCell","createBundle","bundle","state","bundles","id","cumulativeCode","cells","orderedCells","order","map","c","push","content","join","a","style","display","flexDirection","loading","max","ActionBar","moveCell","deleteCell","CellListItem","child","AddCell","previousCellId","insertCellAfter","Logo","Footer","href","target","CellList","fetchCells","renderedCells","length","App","ReactDOM","render","document","querySelector","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","loader","contents","args","getItem","path","cachedResult","axios","get","request","escaped","result","resolveDir","URL","responseURL","pathname","setItem","rawCode","esbuild","worker","wasmURL","entryPoints","write","onResolve","namespace","define","global","jsxFactory","jsxFragment","outputFiles","text","message","payload","input","BUNDLE_START","BUNDLE_COMPLETE","FETCH_CELLS","FETCH_CELLS_COMPLETE","FETCH_CELLS_ERROR","post","SAVE_CELLS_ERROR","initialState","error","reducer","produce","reduce","acc","index","findIndex","targetIndex","randomId","Math","random","toString","substring","foundIndex","unshift","splice","combineReducers","cellsReducer","bundleReducer"],"mappings":"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","file":"static/js/main.35fa817b.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { persistMiddleware } from \"./middlewares/persist-middleware\";\r\nexport const store = createStore(\r\n  reducers,\r\n  {},\r\n  applyMiddleware(persistMiddleware, thunk)\r\n);\r\n","import { Dispatch } from \"redux\";\r\nimport { Action } from \"../actions\";\r\nimport { ActionType } from \"../action-types\";\r\nimport { saveCells } from \"../action-creators\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nexport const persistMiddleware = ({\r\n  dispatch,\r\n  getState,\r\n}: {\r\n  dispatch: Dispatch<Action>;\r\n  getState: () => RootState;\r\n}) => {\r\n  let timer: any;\r\n  return (next: (action: Action) => void) => {\r\n    return (action: Action) => {\r\n      next(action);\r\n      if (\r\n        [\r\n          ActionType.MOVE_CELL,\r\n          ActionType.UPDATE_CELL,\r\n          ActionType.INSERT_CELL_AFTER,\r\n          ActionType.DELETE_CELL,\r\n        ].includes(action.type)\r\n      ) {\r\n        if (timer) {\r\n          clearTimeout(timer);\r\n        }\r\n        timer = setTimeout(() => {\r\n          saveCells()(dispatch, getState);\r\n        }, 250);\r\n      }\r\n    };\r\n  };\r\n};\r\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from \"../state\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import \"./code-editor.css\";\r\nimport \"./syntax.css\";\r\nimport MonacoEditor, { OnChange, OnMount } from \"@monaco-editor/react\";\r\nimport prettier from \"prettier\";\r\nimport parser from \"prettier/parser-babel\";\r\nimport { useRef } from \"react\";\r\nimport monacoJSXHighlighter from \"monaco-jsx-highlighter\";\r\nimport { parse } from \"@babel/parser\";\r\nimport traverse from \"@babel/traverse\";\r\n\r\n\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange: OnChange;\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\r\n  const editorRef = useRef<any>();\r\n\r\n\r\n  const onEditorDidMount: OnMount = (editor, monaco) => {\r\n    editorRef.current = editor;\r\n    editor.getModel()?.updateOptions({ tabSize: 2 });\r\n\r\n\r\n\r\n    const babelParse = (code: any) => parse(code, {\r\n      sourceType: \"module\",\r\n      plugins: [\"jsx\"],\r\n    });\r\n\r\n    const highlighter = new monacoJSXHighlighter(\r\n      //@ts-ignore\r\n      monaco,\r\n      babelParse,\r\n      traverse,\r\n      editor\r\n    );\r\n\r\n\r\n\r\n    highlighter.highLightOnDidChangeModelContent(100,\r\n      () => { },\r\n      () => { },\r\n      undefined,\r\n      () => { });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const onFormatClick = () => {\r\n\r\n    const unformatted = editorRef.current.getModel().getValue();\r\n    const formatted = prettier.format(unformatted,\r\n      {\r\n        parser: \"babel\",\r\n        plugins: [parser],\r\n        useTabs: false,\r\n        semi: true,\r\n      }).replace(/\\n$/, \"\");\r\n\r\n    editorRef.current.setValue(formatted);\r\n  }\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <button\r\n        className=\"button button-format is-info is-small\"\r\n        onClick={onFormatClick}>\r\n        Format</button>\r\n      <MonacoEditor\r\n        onMount={onEditorDidMount}\r\n        onChange={onChange}\r\n        value={initialValue}\r\n        theme=\"vs-dark\"\r\n        language=\"javascript\"\r\n        height=\"100%\"\r\n        options={{\r\n          wordWrap: \"on\",\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 18,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodeEditor;","import { useEffect, useRef } from \"react\";\r\nimport \"./preview.css\";\r\ninterface PreviewProps {\r\n  code: string | undefined;\r\n  err: string;\r\n}\r\n\r\nconst html = `\r\n            <html>\r\n      <head>\r\n        <style>html { background-color: white; }</style>\r\n      </head>\r\n      <body>\r\n        <div id=\"root\"></div>\r\n        <script>\r\n          const handleError = (err) => {\r\n            const root = document.querySelector('#root');\r\n            root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\r\n            console.error(err);\r\n          };\r\n\r\n          window.addEventListener('error', (event) => {\r\n            event.preventDefault();\r\n            handleError(event.error);\r\n          });\r\n\r\n          window.addEventListener('message', (event) => {\r\n            try {\r\n              eval(event.data);\r\n            } catch (err) {\r\n              handleError(err);\r\n            }\r\n          }, false);\r\n        </script>\r\n      </body>\r\n    </html>\r\n              `;\r\n\r\n\r\n\r\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\r\n  const iframe = useRef<any>();\r\n  useEffect(() => {\r\n    iframe.current.srcdoc = html;\r\n\r\n    setTimeout(() => {\r\n      iframe.current.contentWindow.postMessage(code, \"*\")\r\n    }, 50)\r\n\r\n  }, [code])\r\n\r\n\r\n\r\n\r\n  return <div className=\"preview-wrapper\">\r\n    <iframe\r\n      ref={iframe}\r\n      title=\"preview\"\r\n      sandbox=\"allow-scripts\"\r\n      srcDoc={html}\r\n    />\r\n    {err && <div className={err = 'You need to wait for the promise returned from \"initialize\" to be resolved before calling this' ? \"\" : \"preview-error\"}>{err}</div>}\r\n  </div>\r\n\r\n\r\n}\r\n\r\nexport default Preview;\r\n\r\n","import \"./resizable.css\";\r\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\ninterface ResizableProps {\r\n  direction: \"horizontal\" | \"vertical\";\r\n}\r\n\r\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\r\n  let resizableProps: ResizableBoxProps;\r\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\r\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\r\n  const [width, setWidth] = useState(window.innerWidth * 0.75)\r\n\r\n  useEffect(() => {\r\n    let timer: any;\r\n    const listener = () => {\r\n      if (timer) {\r\n        clearTimeout(timer)\r\n      }\r\n      timer = setTimeout(() => {\r\n        setInnerHeight(window.innerHeight)\r\n        setInnerWidth(window.innerWidth)\r\n        if (window.innerWidth * 0.75 < width) {\r\n          setWidth(window.innerWidth * 0.75)\r\n        }\r\n      }, 100)\r\n    };\r\n    window.addEventListener(\"resize\", listener)\r\n    return () => {\r\n      window.removeEventListener(\"resize\", listener)\r\n    }\r\n\r\n  }, [width])\r\n\r\n  if (direction === \"horizontal\") {\r\n    resizableProps = {\r\n      className: \"resize-horizontal\",\r\n      minConstraints: [innerWidth * 0.2, Infinity],\r\n      maxConstraints: [innerWidth * 0.75, Infinity],\r\n      height: Infinity,\r\n      width: width,\r\n      resizeHandles: [\"e\"],\r\n      onResizeStop: (event, data) => {\r\n        setWidth(data.size.width)\r\n      }\r\n    };\r\n  } else {\r\n    resizableProps = {\r\n      minConstraints: [Infinity, 24],\r\n      maxConstraints: [Infinity, innerHeight * 0.9],\r\n      height: 300,\r\n      width: Infinity,\r\n      resizeHandles: [\"s\"]\r\n    }\r\n  }\r\n\r\n  return <ResizableBox {...resizableProps}>\r\n    {children}\r\n  </ResizableBox>\r\n\r\n}\r\n\r\nexport default Resizable;\r\n","import { useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../state\";\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return useMemo(() => {\r\n    return bindActionCreators(actionCreators, dispatch);\r\n  }, [dispatch]);\r\n};\r\n","import \"./code-cell.css\";\r\nimport { useEffect } from 'react';\r\nimport CodeEditor from \"./code-editor\";\r\nimport Preview from \"./preview\";\r\nimport Resizable from \"./resizable\";\r\nimport { Cell } from \"../state\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport { useCumulativeCode } from \"../hooks/use-cumulative-code\";\r\ninterface CodeCellProps {\r\n  cell: Cell;\r\n}\r\n\r\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\r\n\r\n  const { updateCell, createBundle } = useActions();\r\n  const bundle = useTypedSelector((state) => {\r\n    return state.bundles[cell.id]\r\n  })\r\n  const cumulativeCode = useCumulativeCode(cell.id)\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!bundle) {\r\n      createBundle(cell.id, cumulativeCode);\r\n      return;\r\n    }\r\n\r\n\r\n    const timer = setTimeout(async () => {\r\n      createBundle(cell.id, cumulativeCode);\r\n\r\n\r\n    }, 1000)\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cell.id, cumulativeCode, createBundle])\r\n\r\n\r\n\r\n  return (\r\n    <Resizable direction=\"vertical\">\r\n      <div style={{ height: \"calc(100% - 10px)\", display: \"flex\", flexDirection: \"row\" }}>\r\n        <Resizable direction=\"horizontal\">\r\n          <CodeEditor initialValue={cell.content}\r\n            onChange={(value) => updateCell(cell.id, value!)}\r\n          />\r\n        </Resizable>\r\n        <div className=\"always-white\">\r\n          {\r\n            !bundle || bundle.loading\r\n              ?\r\n              <div className=\"progress-cover\">\r\n                <progress className=\"progress is-small is-info\" max=\"100\">\r\n                  Loading\r\n          </progress>\r\n              </div>\r\n\r\n              : <Preview code={bundle.code} err={bundle.err} />\r\n          }\r\n        </div>\r\n      </div>\r\n    </Resizable>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CodeCell;","import { useTypedSelector } from \"./use-typed-selector\";\r\n\r\nexport const useCumulativeCode = (cellId: string) => {\r\n  return useTypedSelector((state) => {\r\n    const { data, order } = state.cells;\r\n    const orderedCells = order.map((id) => data[id]);\r\n    const showFunc = `\r\n      import _React from \"react\";\r\n      import _ReactDOM from \"react-dom\";\r\n      var show = (value) => {\r\n        const root = document.querySelector('#root')\r\n          if(typeof value === 'object'){\r\n            if(value.$$typeof && value.props){\r\n              _ReactDOM.render(value, root);\r\n            }else {\r\n              root.innerHTML = JSON.stringify(value);\r\n            }\r\n          } else {\r\n            root.innerHTML = value;\r\n          }\r\n      };\r\n      `;\r\n\r\n    const showFuncNoop = \"var show = () => {}\";\r\n    const cumulativeCode = [];\r\n    for (let c of orderedCells) {\r\n      if (c.id === cellId) {\r\n        cumulativeCode.push(showFunc);\r\n      } else {\r\n        cumulativeCode.push(showFuncNoop);\r\n      }\r\n      cumulativeCode.push(c.content);\r\n      if (c.id === cellId) {\r\n        break;\r\n      }\r\n    }\r\n    return cumulativeCode;\r\n  }).join(\"\\n\");\r\n};\r\n","import { useActions } from \"../hooks/use-actions\";\r\nimport \"./action-bar.css\";\r\n\r\ninterface ActionBarProps {\r\n  id: string;\r\n}\r\nconst ActionBar: React.FC<ActionBarProps> = ({ id }) => {\r\n\r\n  const { moveCell, deleteCell } = useActions();\r\n\r\n  return <div className=\"action-bar \">\r\n    <button className=\"button is-primary is-small\" onClick={() => moveCell(id, \"up\")}>\r\n      <span className=\"icon\">\r\n        <i className=\"fas fa-caret-up \"></i>\r\n      </span>\r\n    </button>\r\n    <button className=\"button is-primary is-small\" onClick={() => moveCell(id, \"down\")}>\r\n      <span className=\"icon\">\r\n        <i className=\"fas fa-caret-down \"></i>\r\n      </span>\r\n    </button>\r\n    <button className=\"button is-primary is-small\" onClick={() => deleteCell(id)}>\r\n      <span className=\"icon\">\r\n        <i className=\"fas fa-trash \"></i>\r\n      </span>\r\n    </button>\r\n  </div>\r\n}\r\n\r\nexport default ActionBar;\r\n\r\n\r\n\r\n\r\n","import { Cell } from \"../state\";\r\nimport CodeCell from \"./code-cell\";\r\nimport ActionBar from \"./action-bar\";\r\nimport \"./cell-list-item.css\";\r\n\r\ninterface CellListItemProps {\r\n  cell: Cell\r\n}\r\n\r\n\r\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\r\n\r\n  let child: JSX.Element;\r\n  child = <>\r\n    <div className=\"action-bar-wrapper\"></div>\r\n    <ActionBar id={cell.id} />\r\n    <CodeCell cell={cell} />\r\n  </>\r\n\r\n\r\n  return <div className=\"cell-list-item\">\r\n    {child}\r\n\r\n  </div>\r\n}\r\n\r\nexport default CellListItem;","import \"./add-cell.css\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\n\r\ninterface AddCellProps {\r\n  previousCellId: string | null;\r\n}\r\nconst AddCell: React.FC<AddCellProps> = ({ previousCellId }) => {\r\n\r\n  const { insertCellAfter } = useActions();\r\n  return <div className=\"add-cell\">\r\n    <div className=\"add-buttons\">\r\n      <button\r\n        className=\"button is-rounded is-danger is-small\"\r\n        onClick={() => insertCellAfter(previousCellId)}\r\n      >\r\n        <span className=\"icon is-small\">\r\n          <i className=\"fa fa-plus-square\"></i>\r\n        </span>\r\n        <span>Add Cell</span>\r\n      </button>\r\n    </div>\r\n    <div className=\"divider\"></div>\r\n  </div>\r\n}\r\n\r\nexport default AddCell;","import \"./logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"welcome\">Welcome to Preview Pack</h1>\r\n      <div className=\"introduction\">\r\n        <p className=\"padded desc-title\">\r\n          Here you can write and execute your code on the go.\r\n    </p>\r\n        <div>\r\n          <ul>\r\n            <li className=\"padded\">You can import nmp packages and make use of them.</li>\r\n            <li className=\"padded\">You can add, move up and down, or delete code cells.</li>\r\n            <li className=\"padded\">You can execute your code by using show() function:</li>\r\n            <li className=\"padded inde\"> show(123)</li>\r\n            <li className=\"padded\">Or by reffering to root id:</li >\r\n            <li className=\"padded inde\"> document.querySelector(\"#root\").innerHTML = \"your string\"</li>\r\n            <li>Everything will be displayed on Preview Window.</li>\r\n\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo;\r\n\r\n","import \"./footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-my\">\r\n      <span>\r\n\r\n        <a href=\"https://github.com/Nataliasw\" target=\"_blank\"> <i className=\"fab fa-github\"></i> Github/Nataliasw</a>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import \"./cell-list.css\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport CellListItem from \"./cell-list-item\";\r\nimport AddCell from \"./add-cell\";\r\nimport Logo from \"./logo\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport Footer from \"./footer\";\r\n\r\nconst CellList: React.FC = () => {\r\n  const cells = useTypedSelector(({ cells: { order, data } }) => {\r\n    return order.map((id) => {\r\n      return data[id];\r\n    })\r\n  });\r\n\r\n  const { fetchCells, saveCells } = useActions();\r\n  useEffect(() => {\r\n    fetchCells();\r\n  }, []);\r\n\r\n\r\n  const renderedCells = cells.map(cell =>\r\n    <Fragment key={cell.id}>\r\n      <CellListItem cell={cell} />\r\n      <AddCell previousCellId={cell.id} />\r\n\r\n    </Fragment>\r\n  )\r\n\r\n  const firstId = \"abd43\"\r\n  return <div className=\"cell-list\">\r\n    <Logo />\r\n    <Footer />\r\n    <div className={cells.length === 0 ? \"force-visible\" : \"\"}>\r\n      <AddCell previousCellId={firstId} />\r\n    </div>\r\n    {renderedCells}\r\n\r\n  </div>\r\n}\r\n\r\nexport default CellList;","import \"bulmaswatch/darkly/bulmaswatch.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./state\";\r\nimport CellList from \"./components/cell-list\";\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <CellList />\r\n      </div>\r\n    </Provider >\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));","import * as esbuild from \"esbuild-wasm\";\r\nimport axios from \"axios\";\r\nimport localForage from \"localforage\";\r\n\r\nconst fileCache = localForage.createInstance({\r\n  name: \"filecache\"\r\n});\r\n\r\nexport const fetchPlugin = (inputCode: string | undefined) => {\r\n  return {\r\n    name: \"fetch-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n\r\n      build.onLoad({ filter: /^index\\.js$/ }, () => {\r\n        return {\r\n          loader: \"jsx\",\r\n          contents: inputCode,\r\n        };\r\n      });\r\n\r\n\r\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n\r\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(args.path)\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        const escaped = data\r\n          .replace(/\\n/g, \"\")\r\n          .replace(/\"/g, '\\\\\"')\r\n          .replace(/'/g, \"\\\\'\")\r\n        const contents = `\r\n        const style = document.createElement(\"style\");\r\n        style.innerText = '${escaped}';\r\n        document.head.appendChild(style);\r\n        `\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n\r\n        };\r\n        await fileCache.setItem(args.path, result)\r\n        return result;\r\n      });\r\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents: data,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        await fileCache.setItem(args.path, result);\r\n        return result;\r\n      })\r\n\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import * as esbuild from \"esbuild-wasm\";\r\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\r\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\r\nlet timer = false;\r\n\r\nconst bundle = async (rawCode: string | undefined) => {\r\n  if (timer === false) {\r\n    timer = true;\r\n    await esbuild.initialize({\r\n      worker: true,\r\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.11.20/esbuild.wasm\",\r\n    });\r\n  }\r\n\r\n  try {\r\n    const result = await esbuild.build({\r\n      entryPoints: [\"index.js\"],\r\n      bundle: true,\r\n      write: false,\r\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\r\n      define: {\r\n        \"process.env.NODE_ENV\": '\"production\"',\r\n        global: \"window\",\r\n      },\r\n      jsxFactory: \"_React.createElement\",\r\n      jsxFragment: \"_React.Fragment\",\r\n    });\r\n\r\n    return {\r\n      code: result.outputFiles[0].text,\r\n      err: \"\",\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      code: \"\",\r\n      err: err.message,\r\n    };\r\n  }\r\n};\r\n\r\nexport default bundle;\r\n","import * as esbuild from 'esbuild-wasm';\r\n\r\nexport const unpkgPathPlugin = () => {\r\n  return {\r\n    name: 'unpkg-path-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      // Handle root entry file of 'index.js'\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n        return { path: 'index.js', namespace: 'a' };\r\n      });\r\n\r\n      // Handle relative paths in a module\r\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\r\n        return {\r\n          namespace: 'a',\r\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/')\r\n            .href,\r\n        };\r\n      });\r\n\r\n      // Handle main file of a module\r\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\r\n        return {\r\n          namespace: 'a',\r\n          path: `https://unpkg.com/${args.path}`,\r\n        };\r\n      });\r\n    },\r\n  };\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\nimport { Cell } from \"../cell\";\r\nimport bundle from \"../../bundler\";\r\nimport { ActionType } from \"../action-types\";\r\nimport {\r\n  MoveCellAction,\r\n  DeleteCellAction,\r\n  UpdateCellAction,\r\n  InsertCellAfterAction,\r\n  Direction,\r\n  Action,\r\n} from \"../actions\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\r\n  return {\r\n    type: ActionType.UPDATE_CELL,\r\n    payload: {\r\n      id,\r\n      content,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteCell = (id: string): DeleteCellAction => {\r\n  return {\r\n    type: ActionType.DELETE_CELL,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\r\n  return {\r\n    type: ActionType.MOVE_CELL,\r\n    payload: {\r\n      id,\r\n      direction,\r\n    },\r\n  };\r\n};\r\n\r\nexport const insertCellAfter = (id: string | null): InsertCellAfterAction => {\r\n  return {\r\n    type: ActionType.INSERT_CELL_AFTER,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const createBundle = (cellId: string, input: string) => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.BUNDLE_START,\r\n      payload: {\r\n        cellId,\r\n      },\r\n    });\r\n    const result = await bundle(input);\r\n\r\n    dispatch({\r\n      type: ActionType.BUNDLE_COMPLETE,\r\n      payload: {\r\n        cellId,\r\n        bundle: {\r\n          code: result.code,\r\n          err: result.err,\r\n        },\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchCells = () => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    dispatch({ type: ActionType.FETCH_CELLS });\r\n    try {\r\n      const { data }: { data: Cell[] } = await axios.get(\"/cells\");\r\n\r\n      dispatch({\r\n        type: ActionType.FETCH_CELLS_COMPLETE,\r\n        payload: data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ActionType.FETCH_CELLS_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveCells = () => {\r\n  return async (dispatch: Dispatch<Action>, getState: () => RootState) => {\r\n    const {\r\n      cells: { data, order },\r\n    } = getState();\r\n\r\n    const cells = order.map((id) => data[id]);\r\n    try {\r\n      await axios.post(\"/cells\", { cells });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ActionType.SAVE_CELLS_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\nimport { Cell } from \"../cell\";\r\nimport produce from \"immer\";\r\n\r\ninterface CellState {\r\n  loading: boolean;\r\n  error: string | null;\r\n  order: string[];\r\n  data: {\r\n    [key: string]: Cell;\r\n  };\r\n}\r\n\r\nconst initialState: CellState = {\r\n  loading: false,\r\n  error: null,\r\n  order: [],\r\n  data: {},\r\n};\r\n\r\nconst reducer = produce(\r\n  (state: CellState = initialState, action: Action): CellState => {\r\n    switch (action.type) {\r\n      case ActionType.SAVE_CELLS_ERROR:\r\n        state.error = action.payload;\r\n        return state;\r\n      case ActionType.FETCH_CELLS:\r\n        state.loading = true;\r\n        state.error = null;\r\n        return state;\r\n      case ActionType.FETCH_CELLS_COMPLETE:\r\n        state.order = action.payload.map((cell) => cell.id);\r\n        state.data = action.payload.reduce((acc, cell) => {\r\n          acc[cell.id] = cell;\r\n          return acc;\r\n        }, {} as CellState[\"data\"]);\r\n        return state;\r\n      case ActionType.FETCH_CELLS_ERROR:\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n\r\n        return state;\r\n      case ActionType.MOVE_CELL:\r\n        const { direction } = action.payload;\r\n        const index = state.order.findIndex((id) => id === action.payload.id);\r\n        const targetIndex = direction === \"up\" ? index - 1 : index + 1;\r\n\r\n        if (targetIndex < 0 || targetIndex > state.order.length - 1) {\r\n          return state;\r\n        }\r\n\r\n        state.order[index] = state.order[targetIndex];\r\n        state.order[targetIndex] = action.payload.id;\r\n        return state;\r\n      case ActionType.DELETE_CELL:\r\n        delete state.data[action.payload];\r\n        state.order = state.order.filter((id) => id !== action.payload);\r\n        return state;\r\n      case ActionType.INSERT_CELL_AFTER:\r\n        const randomId = () => {\r\n          return Math.random().toString(36).substring(2, 7);\r\n        };\r\n\r\n        const cell: Cell = {\r\n          content: \"\",\r\n          id: randomId(),\r\n        };\r\n\r\n        state.data[cell.id] = cell;\r\n\r\n        const foundIndex = state.order.findIndex(\r\n          (id) => id === action.payload.id\r\n        );\r\n        if (foundIndex < 0) {\r\n          state.order.unshift(cell.id);\r\n        } else {\r\n          state.order.splice(foundIndex + 1, 0, cell.id);\r\n        }\r\n        return state;\r\n      case ActionType.UPDATE_CELL:\r\n        const { id, content } = action.payload;\r\n        state.data[id].content = content;\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\nimport { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\n\r\ninterface BundleState {\r\n  [key: string]:\r\n    | {\r\n        loading: boolean;\r\n        code: string;\r\n        err: string;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nconst initialState: BundleState = {};\r\n\r\nconst reducer = produce(\r\n  (state: BundleState = initialState, action: Action): BundleState => {\r\n    switch (action.type) {\r\n      case ActionType.BUNDLE_START:\r\n        state[action.payload.cellId] = {\r\n          loading: true,\r\n          code: \"\",\r\n          err: \"\",\r\n        };\r\n        return state;\r\n      case ActionType.BUNDLE_COMPLETE:\r\n        state[action.payload.cellId] = {\r\n          loading: false,\r\n          code: action.payload.bundle.code,\r\n          err: action.payload.bundle.err,\r\n        };\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport cellsReducer from \"./cellsReducer\";\r\nimport bundleReducer from \"./bundleReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  cells: cellsReducer,\r\n  bundles: bundleReducer,\r\n});\r\n\r\nexport default reducers;\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","export * from \"./store\";\r\nexport * from \"./reducers\";\r\nexport * from \"./cell\";\r\nexport * as actionCreators from \"./action-creators\";\r\n","export enum ActionType {\r\n  MOVE_CELL = \"move_cell\",\r\n  DELETE_CELL = \"delete_cell\",\r\n  INSERT_CELL_AFTER = \"insert_cell_after\",\r\n  UPDATE_CELL = \"update_cell\",\r\n  BUNDLE_START = \"bundle_start\",\r\n  BUNDLE_COMPLETE = \"bundle_complete\",\r\n  FETCH_CELLS = \"fetch_cells\",\r\n  FETCH_CELLS_COMPLETE = \"fetch_cells_complete\",\r\n  FETCH_CELLS_ERROR = \"fetch_cells_error\",\r\n  SAVE_CELLS_ERROR = \"save_cells_error\",\r\n}\r\n"],"sourceRoot":""}